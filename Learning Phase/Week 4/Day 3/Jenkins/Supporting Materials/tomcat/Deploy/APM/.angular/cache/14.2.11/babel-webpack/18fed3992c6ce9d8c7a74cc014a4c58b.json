{"ast":null,"code":"import { Observable } from 'rxjs'; // Replaces use of RxJS delay. See v0.5.4.\n\n/** adds specified delay (in ms) to both next and error channels of the response observable */\n\nexport function delayResponse(response$, delayMs) {\n  return new Observable(function (observer) {\n    var completePending = false;\n    var nextPending = false;\n    var subscription = response$.subscribe(function (value) {\n      nextPending = true;\n      setTimeout(function () {\n        observer.next(value);\n\n        if (completePending) {\n          observer.complete();\n        }\n      }, delayMs);\n    }, function (error) {\n      return setTimeout(function () {\n        return observer.error(error);\n      }, delayMs);\n    }, function () {\n      completePending = true;\n\n      if (!nextPending) {\n        observer.complete();\n      }\n    });\n    return function () {\n      return subscription.unsubscribe();\n    };\n  });\n} //# sourceMappingURL=delay-response.js.map","map":null,"metadata":{},"sourceType":"module"}